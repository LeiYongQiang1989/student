<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.work.grade.mapper.GradeMapper">


    <!-- 通用查询映射结果 -->
    <resultMap id="ResultMap" type="com.student.work.grade.model.GradeVO">
        <result column="id" property="id" />
        <result column="create_id" property="createId" />
        <result column="create_name" property="createName" />
        <result column="student_id" property="studentId" />
        <result column="student_name" property="studentName" />
        <result column="grade_number" property="gradeNumber" />
        <result column="department_id" property="departmentId" />
        <result column="department_name" property="departmentName" />
        <result column="subject_name" property="subjectName" />
        <result column="subject_id" property="subjectId" />
        <result column="class_name" property="className" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <select id="getPage" resultMap="ResultMap" parameterType="com.student.work.grade.model.GradeDTO">
        select
            a.id as id,
            a.create_id as create_id,
            a.create_name as create_name,
            a.student_id as student_id,
            a.student_name as student_name,
            a.grade_number as grade_number,
            a.department_id as department_id,
            a.department_name as department_name,
            a.subject_id as subject_id,
            a.create_time as create_time,
            a.update_time as update_time,
            b.subject_name as subject_name
        from
            tb_grade  a left join tb_subject b  on b.id=a.subject_id
        <where>
            <if test="param.createId != null ">and a.create_id = #{param.createId}</if>
            <if test="param.classId != null">and a.class_id = #{param.classId}</if>
            <if test="param.studentId != null ">and a.student_id = #{param.studentId}</if>
            <if test="param.subjectId != null ">and a.subject_id = #{param.subjectId}</if>
            <if test="param.departmentId != null ">and a.department_id = #{param.departmentId}</if>
        </where>
        ORDER BY a.id DESC
    </select>


    <select id="getStatistics" resultType="com.student.work.grade.model.StatisticVO"
            parameterType="com.student.work.grade.model.GradeDTO">
        select
         max(grade_number) maxGradeNumber,
         min(grade_number) minGradeNumber,
         format(avg (grade_number),2) avGradeNumber
        from
         tb_grade
        <where>
            <if test="param.subjectId != null ">and subject_id = #{param.subjectId}</if>
            <if test="param.createId != null ">and create_id = #{param.createId}</if>
            <if test="param.classId != null">and class_id = #{param.classId}</if>
            <if test="param.departmentId != null ">and department_id = #{param.departmentId}</if>
        </where>
    </select>


    <select id="getCount" resultType="java.lang.Integer" parameterType="com.student.work.grade.model.GradeDTO">
        select
            COUNT(grade_number)
        from
            tb_grade
        <where>
            <if test="param.endNumber != null and param.endNumber != ''">and grade_number &lt; #{param.endNumber}</if>
            <if test="param.startNumber != null and param.startNumber != ''">and grade_number &gt;= #{param.startNumber}</if>
            <if test="param.subjectId != null ">and subject_id = #{param.subjectId}</if>
            <if test="param.createId != null ">and create_id = #{param.createId}</if>
            <if test="param.classId != null">and class_id = #{param.classId}</if>
            <if test="param.departmentId != null ">and department_id = #{param.departmentId}</if>
        </where>
    </select>

    <select id="getOne" resultType="com.student.work.grade.model.GradeDO" parameterType="com.student.work.grade.model.GradeDTO">
        select
            *
        from
            tb_grade
        <where>
            <if test="param.studentId != null ">and student_id = #{param.studentId}</if>
            <if test="param.subjectId != null ">and subject_id = #{param.subjectId}</if>
            <if test="param.createId != null ">and create_id = #{param.createId}</if>
            <if test="param.classId != null">and class_id = #{param.classId}</if>
            <if test="param.departmentId != null ">and department_id = #{param.departmentId}</if>
        </where>
    </select>


    <select id="getList" resultType="com.student.work.grade.model.GradeEx" parameterType="com.student.work.grade.model.GradeDTO">
        select
            a.create_name as createName,
            a.student_name as studentName,
            a.grade_number as gradeNumber,
            a.department_name as departmentName,
            date_format( a.create_time,'%Y-%m-%d %H:%i:%S')  as createTime,
            date_format( a.update_time,'%Y-%m-%d %H:%i:%S')  as updateTime,
            a.class_name as className,
            b.subject_name as subjectName
        from
            tb_grade  a left join tb_subject b  on b.id=a.subject_id
        <where>
            <if test="param.createId != null ">and a.create_id = #{param.createId}</if>
            <if test="param.classId != null">and a.class_id = #{param.classId}</if>
            <if test="param.studentId != null ">and a.student_id = #{param.studentId}</if>
            <if test="param.subjectId != null ">and a.subject_id = #{param.subjectId}</if>
            <if test="param.departmentId != null ">and a.department_id = #{param.departmentId}</if>
        </where>
        ORDER BY a.id DESC
    </select>


</mapper>
